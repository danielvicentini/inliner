#!/usr/bin/env python3
"""
Inliner 1.0-4
A tool that converts indented BASIC programs into line numbered style.

Copyright (C) 2017 by Giovanni Nunes <giovanni.nunes@gmail.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

Usage:
    inliner <filename> [ --start=<line> --step=<value> --upper --rem ]
    inliner --help

Options:
    --help          Show this screen.
    --rem           Use the REM statement istead of the apostrophe.
    --upper         Put all BASIC statements in uppercase.
"""

from docopt import docopt
from Inliner import Inliner

START = 10
STEP = 10

def main():
    # checking command line parameters..

    # first line
    start = abs(int(arguments['--start'])) \
        if arguments['--start'] is not None else START

    # line icrement
    step = abs(int(arguments['--step'])) \
        if arguments['--step'] is not None else STEP

    # UPPERCASE or lowercase output
    to_upper = True if arguments['--upper'] is True else False

    # check the use of the rem instead of apostrophe
    if arguments['--rem']:
        # if output is in uppercase, adjust it
        remark='rem' if to_upper is False else 'REM'
    else:
        remark="\'"

    program = Inliner.load(arguments['<filename>'])

    basic = Inliner(program, start, step, remark)

    print(basic.list(uppercase=to_upper, linefeed="\r\n"), end="")


if __name__ == '__main__':
    arguments = docopt(__doc__)
    main()

# vim: set fileencoding=utf-8
# vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4
